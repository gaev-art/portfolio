.header {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: 100;
  @include adaptiveValue("height", 80, 30);
  @include adaptiveValue("padding", 20, 20);

  &__menu {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }
}

.menu {
  font-size: rem(17);
  line-height: math.div(21, 17);

  &__body {
    flex: 1 1 auto;
    display: flex;

    @media (max-width: $tablet) {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      z-index: 1;
      background: $mainBgColor;
      @include adaptiveValue("padding-top", 150, 100, 991.98, 320);
      padding-bottom: rem(15);

      transform: translateY(-100%);
      transition: all 0.3s ease 0s;

      .menu-open & {
        transform: translateY(0%);
      }
    }
  }

  &__body-inner {
    display: flex;
    width: 100%;

    @media (max-width: $tablet) {
      overflow: auto;

      flex-direction: column;
      align-items: center;

      padding: 0 rem(15);
    }
  }

  &__list {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;

    @media (min-width: $tablet) {
      flex: 1 1 auto;
      gap: rem(15);
    }

    @media (max-width: $tablet) {
      flex-direction: column;
    }
  }

  &__item {
    display: flex;
    position: relative;
    @include adaptiveValue("font-size", 40, 16, $containerWidth, 992, 0);

    @media (max-width: $tablet) {
      flex-direction: column;
    }
  }
}


//Burger
.burger {
  display: none;

  @media (max-width: $tablet) {
    display: block;
    position: relative;
    width: rem(30);
    height: rem(18);
    cursor: pointer;
    z-index: 2;

    span,
    &::before,
    &::after {
      content: "";
      transition: all 0.3s ease 0s;
      right: 0;
      position: absolute;
      width: 100%;
      height: rem(2);
      background-color: $mainTextColor;
    }

    &::before {
      top: 0;
    }

    &::after {
      bottom: 0;
    }

    span {
      top: calc(50% - rem(1));
    }

    .menu-open & {

      span {
        width: 0;
      }

      &::before {
        top: calc(50% - rem(1));
        transform: rotate(-45deg);
        background-color: red;
      }

      &::after {
        bottom: calc(50% - rem(1));
        transform: rotate(45deg);
        background-color: red;

      }
    }
  }
}